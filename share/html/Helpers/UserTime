%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2017 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%INIT>
my @results;
if ( $user_req && $start_date && $end_date ) {
    my $user = RT::User->new( $session{CurrentUser} );

    my ($ret, $msg) = $user->Load( $user_req );
    push @results, $msg unless $ret;

    my $start = RT::Date->new( $session{CurrentUser} );
    $ret = $start->Set( Value => $start->ParseByTimeParseDate(Value => $start_date, Timezone => 'user') );
    push @results, 'Invalid start date: ' . $start_date unless $ret;

    my $end = RT::Date->new($session{CurrentUser});
    ($ret, $msg) = $end->Set( Value => $end->ParseByTimeParseDate(Value => $end_date, Timezone => 'user') );
    push @results, 'Invalid end date: ' . $end_date unless $ret;

    my $txns = RT::Transactions->new($session{CurrentUser});
    $txns->Limit(
        FIELD    => 'ObjectType',
        VALUE    => 'RT::Ticket',
    );

    $txns->Limit(
        FIELD    => 'Creator',
        VALUE    => $user->id,
    );

    $txns->Limit(
        FIELD    => 'TimeTaken',
        VALUE    => 0,
        OPERATOR => '!=',
    );

    $txns->Limit(
        FIELD    => 'Created',
        VALUE    => $start->ISO(Timezone => 'user'),
        OPERATOR => '>=',
    );

    $txns->Limit(
        FIELD    => 'Created',
        VALUE    => $end->ISO(Timezone => 'user'),
        OPERATOR => '<=',
        ENTRYAGGREGATOR => 'AND',
    );

    my %data;
    my $total_time_worked = 0;
    while ( my $txn = $txns->Next ) {
        my $ticket = $txn->TicketObj;
        $total_time_worked = $total_time_worked + $txn->TimeTaken;

        my $day_worked = $txn->CreatedObj->RFC2822( Time => 0, Timezone => 'user' );
        my $time_hours = $txn->TimeTaken / 60;

        # We only want two decimal places
        $time_hours = int($time_hours * (10**2)) / 10**2;

        push @{$data{$day_worked}}, {DayWorked => $day_worked, Id => $ticket->Id, Subject => $ticket->Subject, Queue => $ticket->QueueObj->Name,
            Status => $ticket->Status, Owner => $ticket->OwnerObj->Name, Time => $time_hours > 1 ? $time_hours . ' hours (' . $txn->TimeTaken . '  minutes)' : $txn->TimeTaken . ' (minutes)',
                TimeMin => $txn->TimeTaken};
    }

    $r->content_type('application/json; charset=utf-8');
    $m->print(JSON({ TotalTime => $total_time_worked, Data => \%data, Results => \@results }));
}

$m->abort();
</%INIT>

<%ARGS>
$user_req   =>   undef
$start_date =>   undef
$end_date   =>   undef
</%ARGS>
